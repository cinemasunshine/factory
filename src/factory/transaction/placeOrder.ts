import * as cinerino from '@cinerino/factory';

import { IAttributes as IOrderActionAttributes } from '../action/trade/order';
import { IExtendId } from '../autoGenerated';
import * as OrderFactory from '../order';
import * as OrganizationFactory from '../organization';
import OrganizationType from '../organizationType';
import * as OwnershipInfoFactory from '../ownershipInfo';
import { IPerson } from '../person';
import * as TransactionFactory from '../transaction';
import TransactionType from '../transactionType';

export type ICustomerContact = cinerino.transaction.placeOrder.ICustomerContact;
/**
 * seller interface
 * 販売者インターフェース
 */
export type ISeller = OrganizationFactory.IOrganization<OrganizationFactory.IAttributes<OrganizationType>>;
/**
 * agent interface
 * 購入者インターフェース
 */
export type IAgent = IPerson;
/**
 * result interface
 * 取引結果インターフェース
 */
export interface IResult {
    /**
     * 注文データ
     */
    order: OrderFactory.IOrder;
    /**
     * 購入者に与えられる所有権リスト
     */
    ownershipInfos: OwnershipInfoFactory.IOwnershipInfo<OwnershipInfoFactory.IGoodType>[];
}
export type IError = cinerino.transaction.placeOrder.IError;
export type IObject = cinerino.transaction.placeOrder.IObject;

export interface IPotentialActions {
    order: IOrderActionAttributes;
}

export type ITransaction = IExtendId<IAttributes>;
/**
 * place order transaction interface
 * 注文取引インターフェース
 */
export interface IAttributes extends TransactionFactory.IAttributes<TransactionType.PlaceOrder, IAgent, IObject, IResult> {
    /**
     * 購入者
     */
    agent: IAgent;
    /**
     * 販売者
     */
    seller: ISeller;
    /**
     * 取引の結果発生するもの
     */
    result?: IResult;
    /**
     * 取引に関するエラー
     */
    error?: IError;
    /**
     * 取引の対象物
     * 座席仮予約、クレジットカードのオーソリなど、取引を構成する承認などが含まれます。
     */
    object: IObject;
    /**
     * 事後発生アクション
     */
    potentialActions?: IPotentialActions;
}

export type ISearchConditions = cinerino.transaction.placeOrder.ISearchConditions;
