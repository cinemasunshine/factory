import * as cinerino from '@cinerino/factory';

import { IAttributes as IReturnOrderActionAttributes } from '../action/transfer/return/order';
import { IExtendId } from '../autoGenerated';
import { IPerson } from '../person';
import * as TransactionFactory from '../transaction';
import TransactionType from '../transactionType';

/**
 * 購入者インターフェース
 */
export type IAgent = IPerson;

/**
 * 取引結果インターフェース
 */
export type IResult = any;

/**
 * エラーインターフェース
 */
export type IError = any;

/**
 * 返品理由
 */
export enum Reason {
    /**
     * 購入者自身の都合での返品
     */
    Customer = 'Customer',
    /**
     * 販売者都合での返品
     */
    Seller = 'Seller'
}

export type IReturnableOrder = cinerino.transaction.returnOrder.IReturnableOrder;
export type IStartParamsWithoutDetail = cinerino.transaction.returnOrder.IStartParamsWithoutDetail;

export type IStartParams = TransactionFactory.IStartParams<TransactionType.ReturnOrder, IAgent, undefined, IObject>;
export type IObject = cinerino.transaction.returnOrder.IObject;
// export interface IObject {
//     clientUser?: IClientUser;
//     order: IOrder;
//     /**
//      * キャンセル手数料
//      */
//     cancellationFee: number;
//     /**
//      * 返品理由
//      */
//     reason: Reason;
// }

export interface IPotentialActions {
    /**
     * 注文返品アクション属性
     */
    returnOrder: IReturnOrderActionAttributes;
}

export type ITransaction = IExtendId<IAttributes>;

/**
 * 返品取引インターフェース
 */
export interface IAttributes extends TransactionFactory.IAttributes<IStartParams, IResult, IError, IPotentialActions> {
}

export interface ISearchConditions extends TransactionFactory.ISearchConditions<TransactionType.ReturnOrder> {
    object?: {
        order?: {
            /**
             * 返品対象注文番号
             */
            orderNumbers?: string[];
        };
        result?: {
        };
    };
}
